#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>
#include <cmath>
#include <string.h>
#define isl_min(x,y) ((x) < (y) ? (x) : (y))
#define isl_max(x,y) ((x) > (y) ? (x) : (y))
#define isl_floord(n,d) (((n)<0) ? -((-(n)+(d)-1)/(d)) : (n)/(d))
extern "C" void pipeline_harris(int C, int R, void * img_void_arg, void * harris_void_arg)
{
  float * harris;
  harris = (float *) (harris_void_arg);
  float * img;
  img = (float *) (img_void_arg);
  int _ct0 = (2 + R);
  int _ct1 = (2 + C);
  #pragma omp parallel for schedule(static)
  for (int _T_i0 = -1; (_T_i0 <= 177); _T_i0 = (_T_i0 + 1))
  {
    float Iy[576];
    float Ix[576];
    float Ixy[576];
    float Ixx[576];
    float Iyy[576];
    float Sxx[576];
    float Sxy[576];
    float Syy[576];
    float trace[576];
    float det[576];
    for (int _T_i1 = -1; (_T_i1 <= 266); _T_i1 = (_T_i1 + 1))
    {
      int _ct2 = ((2832 < ((16 * _T_i0) + 23))? 2832: ((16 * _T_i0) + 23));
      int _ct3 = ((1 > (16 * _T_i0))? 1: (16 * _T_i0));
      for (int _i0 = _ct3; (_i0 <= _ct2); _i0 = (_i0 + 1))
      {
        int _ct4 = ((4256 < ((16 * _T_i1) + 23))? 4256: ((16 * _T_i1) + 23));
        int _ct5 = ((1 > (16 * _T_i1))? 1: (16 * _T_i1));
        #pragma ivdep
        for (int _i1 = _ct5; (_i1 <= _ct4); _i1 = (_i1 + 1))
        {
          Iy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] = ((((((img[(((-1 + _i0) * (C + 2)) + (-1 + _i1))] * -0.08333333333333333) + (img[(((-1 + _i0) * (C + 2)) + (1 + _i1))] * 0.08333333333333333)) + (img[((_i0 * (C + 2)) + (-1 + _i1))] * -0.16666666666666666)) + (img[((_i0 * (C + 2)) + (1 + _i1))] * 0.16666666666666666)) + (img[(((1 + _i0) * (C + 2)) + (-1 + _i1))] * -0.08333333333333333)) + (img[(((1 + _i0) * (C + 2)) + (1 + _i1))] * 0.08333333333333333));
        }
      }
      int _ct6 = ((2832 < ((16 * _T_i0) + 23))? 2832: ((16 * _T_i0) + 23));
      int _ct7 = ((1 > (16 * _T_i0))? 1: (16 * _T_i0));
      for (int _i0 = _ct7; (_i0 <= _ct6); _i0 = (_i0 + 1))
      {
        int _ct8 = ((4256 < ((16 * _T_i1) + 23))? 4256: ((16 * _T_i1) + 23));
        int _ct9 = ((1 > (16 * _T_i1))? 1: (16 * _T_i1));
        #pragma ivdep
        for (int _i1 = _ct9; (_i1 <= _ct8); _i1 = (_i1 + 1))
        {
          Ix[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] = ((((((img[(((-1 + _i0) * (C + 2)) + (-1 + _i1))] * -0.08333333333333333) + (img[(((1 + _i0) * (C + 2)) + (-1 + _i1))] * 0.08333333333333333)) + (img[(((-1 + _i0) * (C + 2)) + _i1)] * -0.16666666666666666)) + (img[(((1 + _i0) * (C + 2)) + _i1)] * 0.16666666666666666)) + (img[(((-1 + _i0) * (C + 2)) + (1 + _i1))] * -0.08333333333333333)) + (img[(((1 + _i0) * (C + 2)) + (1 + _i1))] * 0.08333333333333333));
        }
      }
      int _ct10 = ((2832 < ((16 * _T_i0) + 22))? 2832: ((16 * _T_i0) + 22));
      int _ct11 = ((1 > ((16 * _T_i0) + 1))? 1: ((16 * _T_i0) + 1));
      for (int _i0 = _ct11; (_i0 <= _ct10); _i0 = (_i0 + 1))
      {
        int _ct12 = ((4256 < ((16 * _T_i1) + 22))? 4256: ((16 * _T_i1) + 22));
        int _ct13 = ((1 > ((16 * _T_i1) + 1))? 1: ((16 * _T_i1) + 1));
        #pragma ivdep
        for (int _i1 = _ct13; (_i1 <= _ct12); _i1 = (_i1 + 1))
        {
          Ixy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] = (Ix[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] * Iy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]);
        }
      }
      int _ct14 = ((2832 < ((16 * _T_i0) + 22))? 2832: ((16 * _T_i0) + 22));
      int _ct15 = ((1 > ((16 * _T_i0) + 1))? 1: ((16 * _T_i0) + 1));
      for (int _i0 = _ct15; (_i0 <= _ct14); _i0 = (_i0 + 1))
      {
        int _ct16 = ((4256 < ((16 * _T_i1) + 22))? 4256: ((16 * _T_i1) + 22));
        int _ct17 = ((1 > ((16 * _T_i1) + 1))? 1: ((16 * _T_i1) + 1));
        #pragma ivdep
        for (int _i1 = _ct17; (_i1 <= _ct16); _i1 = (_i1 + 1))
        {
          Ixx[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] = (Ix[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] * Ix[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]);
        }
      }
      int _ct18 = ((2832 < ((16 * _T_i0) + 22))? 2832: ((16 * _T_i0) + 22));
      int _ct19 = ((1 > ((16 * _T_i0) + 1))? 1: ((16 * _T_i0) + 1));
      for (int _i0 = _ct19; (_i0 <= _ct18); _i0 = (_i0 + 1))
      {
        int _ct20 = ((4256 < ((16 * _T_i1) + 22))? 4256: ((16 * _T_i1) + 22));
        int _ct21 = ((1 > ((16 * _T_i1) + 1))? 1: ((16 * _T_i1) + 1));
        #pragma ivdep
        for (int _i1 = _ct21; (_i1 <= _ct20); _i1 = (_i1 + 1))
        {
          Iyy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] = (Iy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] * Iy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]);
        }
      }
      int _ct22 = ((2831 < ((16 * _T_i0) + 21))? 2831: ((16 * _T_i0) + 21));
      int _ct23 = ((2 > ((16 * _T_i0) + 2))? 2: ((16 * _T_i0) + 2));
      for (int _i0 = _ct23; (_i0 <= _ct22); _i0 = (_i0 + 1))
      {
        int _ct24 = ((4255 < ((16 * _T_i1) + 21))? 4255: ((16 * _T_i1) + 21));
        int _ct25 = ((2 > ((16 * _T_i1) + 2))? 2: ((16 * _T_i1) + 2));
        #pragma ivdep
        for (int _i1 = _ct25; (_i1 <= _ct24); _i1 = (_i1 + 1))
        {
          Sxx[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] = ((((((((Ixx[(((-1 + ((-16 * _T_i0) + _i0)) * 24) + (-1 + ((-16 * _T_i1) + _i1)))] + Ixx[(((-1 + ((-16 * _T_i0) + _i0)) * 24) + ((-16 * _T_i1) + _i1))]) + Ixx[(((-1 + ((-16 * _T_i0) + _i0)) * 24) + (1 + ((-16 * _T_i1) + _i1)))]) + Ixx[((((-16 * _T_i0) + _i0) * 24) + (-1 + ((-16 * _T_i1) + _i1)))]) + Ixx[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]) + Ixx[((((-16 * _T_i0) + _i0) * 24) + (1 + ((-16 * _T_i1) + _i1)))]) + Ixx[(((1 + ((-16 * _T_i0) + _i0)) * 24) + (-1 + ((-16 * _T_i1) + _i1)))]) + Ixx[(((1 + ((-16 * _T_i0) + _i0)) * 24) + ((-16 * _T_i1) + _i1))]) + Ixx[(((1 + ((-16 * _T_i0) + _i0)) * 24) + (1 + ((-16 * _T_i1) + _i1)))]);
        }
      }
      int _ct26 = ((2831 < ((16 * _T_i0) + 21))? 2831: ((16 * _T_i0) + 21));
      int _ct27 = ((2 > ((16 * _T_i0) + 2))? 2: ((16 * _T_i0) + 2));
      for (int _i0 = _ct27; (_i0 <= _ct26); _i0 = (_i0 + 1))
      {
        int _ct28 = ((4255 < ((16 * _T_i1) + 21))? 4255: ((16 * _T_i1) + 21));
        int _ct29 = ((2 > ((16 * _T_i1) + 2))? 2: ((16 * _T_i1) + 2));
        #pragma ivdep
        for (int _i1 = _ct29; (_i1 <= _ct28); _i1 = (_i1 + 1))
        {
          Sxy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] = ((((((((Ixy[(((-1 + ((-16 * _T_i0) + _i0)) * 24) + (-1 + ((-16 * _T_i1) + _i1)))] + Ixy[(((-1 + ((-16 * _T_i0) + _i0)) * 24) + ((-16 * _T_i1) + _i1))]) + Ixy[(((-1 + ((-16 * _T_i0) + _i0)) * 24) + (1 + ((-16 * _T_i1) + _i1)))]) + Ixy[((((-16 * _T_i0) + _i0) * 24) + (-1 + ((-16 * _T_i1) + _i1)))]) + Ixy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]) + Ixy[((((-16 * _T_i0) + _i0) * 24) + (1 + ((-16 * _T_i1) + _i1)))]) + Ixy[(((1 + ((-16 * _T_i0) + _i0)) * 24) + (-1 + ((-16 * _T_i1) + _i1)))]) + Ixy[(((1 + ((-16 * _T_i0) + _i0)) * 24) + ((-16 * _T_i1) + _i1))]) + Ixy[(((1 + ((-16 * _T_i0) + _i0)) * 24) + (1 + ((-16 * _T_i1) + _i1)))]);
        }
      }
      int _ct30 = ((2831 < ((16 * _T_i0) + 21))? 2831: ((16 * _T_i0) + 21));
      int _ct31 = ((2 > ((16 * _T_i0) + 2))? 2: ((16 * _T_i0) + 2));
      for (int _i0 = _ct31; (_i0 <= _ct30); _i0 = (_i0 + 1))
      {
        int _ct32 = ((4255 < ((16 * _T_i1) + 21))? 4255: ((16 * _T_i1) + 21));
        int _ct33 = ((2 > ((16 * _T_i1) + 2))? 2: ((16 * _T_i1) + 2));
        #pragma ivdep
        for (int _i1 = _ct33; (_i1 <= _ct32); _i1 = (_i1 + 1))
        {
          Syy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] = ((((((((Iyy[(((-1 + ((-16 * _T_i0) + _i0)) * 24) + (-1 + ((-16 * _T_i1) + _i1)))] + Iyy[(((-1 + ((-16 * _T_i0) + _i0)) * 24) + ((-16 * _T_i1) + _i1))]) + Iyy[(((-1 + ((-16 * _T_i0) + _i0)) * 24) + (1 + ((-16 * _T_i1) + _i1)))]) + Iyy[((((-16 * _T_i0) + _i0) * 24) + (-1 + ((-16 * _T_i1) + _i1)))]) + Iyy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]) + Iyy[((((-16 * _T_i0) + _i0) * 24) + (1 + ((-16 * _T_i1) + _i1)))]) + Iyy[(((1 + ((-16 * _T_i0) + _i0)) * 24) + (-1 + ((-16 * _T_i1) + _i1)))]) + Iyy[(((1 + ((-16 * _T_i0) + _i0)) * 24) + ((-16 * _T_i1) + _i1))]) + Iyy[(((1 + ((-16 * _T_i0) + _i0)) * 24) + (1 + ((-16 * _T_i1) + _i1)))]);
        }
      }
      int _ct34 = ((2831 < ((16 * _T_i0) + 20))? 2831: ((16 * _T_i0) + 20));
      int _ct35 = ((2 > ((16 * _T_i0) + 3))? 2: ((16 * _T_i0) + 3));
      for (int _i0 = _ct35; (_i0 <= _ct34); _i0 = (_i0 + 1))
      {
        int _ct36 = ((4255 < ((16 * _T_i1) + 20))? 4255: ((16 * _T_i1) + 20));
        int _ct37 = ((2 > ((16 * _T_i1) + 3))? 2: ((16 * _T_i1) + 3));
        #pragma ivdep
        for (int _i1 = _ct37; (_i1 <= _ct36); _i1 = (_i1 + 1))
        {
          trace[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] = (Sxx[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] + Syy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]);
        }
      }
      int _ct38 = ((2831 < ((16 * _T_i0) + 20))? 2831: ((16 * _T_i0) + 20));
      int _ct39 = ((2 > ((16 * _T_i0) + 3))? 2: ((16 * _T_i0) + 3));
      for (int _i0 = _ct39; (_i0 <= _ct38); _i0 = (_i0 + 1))
      {
        int _ct40 = ((4255 < ((16 * _T_i1) + 20))? 4255: ((16 * _T_i1) + 20));
        int _ct41 = ((2 > ((16 * _T_i1) + 3))? 2: ((16 * _T_i1) + 3));
        #pragma ivdep
        for (int _i1 = _ct41; (_i1 <= _ct40); _i1 = (_i1 + 1))
        {
          det[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] = ((Sxx[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] * Syy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]) - (Sxy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] * Sxy[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]));
        }
      }
      int _ct42 = ((2831 < ((16 * _T_i0) + 19))? 2831: ((16 * _T_i0) + 19));
      int _ct43 = ((2 > ((16 * _T_i0) + 4))? 2: ((16 * _T_i0) + 4));
      for (int _i0 = _ct43; (_i0 <= _ct42); _i0 = (_i0 + 1))
      {
        int _ct44 = ((4255 < ((16 * _T_i1) + 19))? 4255: ((16 * _T_i1) + 19));
        int _ct45 = ((2 > ((16 * _T_i1) + 4))? 2: ((16 * _T_i1) + 4));
        #pragma ivdep
        for (int _i1 = _ct45; (_i1 <= _ct44); _i1 = (_i1 + 1))
        {
          harris[((_i0 * _ct1) + _i1)] = (det[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))] - ((0.04 * trace[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]) * trace[((((-16 * _T_i0) + _i0) * 24) + ((-16 * _T_i1) + _i1))]));
        }
      }
      if (((_T_i0 == -1) && (_T_i1 == -1)))
      {
        harris[0] = 0.0;
      }
    }
  }
}